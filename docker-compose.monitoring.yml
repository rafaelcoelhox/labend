version: '3.8'

services:
  # Aplicação principal
  postgres:
    image: postgres:15-alpine
    container_name: labend-postgres
    environment:
      POSTGRES_USER: labend_user
      POSTGRES_PASSWORD: labend_password
      POSTGRES_DB: labend_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labend_user -d labend_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: labend-app
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://labend_user:labend_password@postgres:5432/labend_db?sslmode=disable
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    labels:
      - "monitoring=true"

  # Prometheus - Coleta de métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: labend-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    depends_on:
      - app
    restart: unless-stopped

  # Grafana - Dashboard e visualização
  grafana:
    image: grafana/grafana:latest
    container_name: labend-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  # Alertmanager - Gerenciamento de alertas
  alertmanager:
    image: prom/alertmanager:latest
    container_name: labend-alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    depends_on:
      - prometheus
    restart: unless-stopped

  # Node Exporter - Métricas do sistema
  node-exporter:
    image: prom/node-exporter:latest
    container_name: labend-node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped

  # cAdvisor - Métricas de containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: labend-cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    restart: unless-stopped

  # Jaeger - Tracing distribuído
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: labend-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
    restart: unless-stopped

  # Redis - Cache e rate limiting
  redis:
    image: redis:7-alpine
    container_name: labend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Redis Exporter - Métricas do Redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: labend-redis-exporter
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    restart: unless-stopped

  # Postgres Exporter - Métricas do PostgreSQL
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: labend-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgres://labend_user:labend_password@postgres:5432/labend_db?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  redis_data: 