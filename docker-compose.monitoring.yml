version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: labend-postgres
    environment:
      POSTGRES_USER: labend_user
      POSTGRES_PASSWORD: labend_password
      POSTGRES_DB: labend_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/configs/postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labend_user -d labend_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: labend-app
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://labend_user:labend_password@postgres:5432/labend_db?sslmode=disable
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
      - METRICS_ENABLED=true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - default
      - monitoring-network

  # Prometheus - Coleta e armazena m√©tricas
  prometheus:
    image: prom/prometheus:latest
    container_name: labend-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./docker/configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/configs/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    depends_on:
      - app
    networks:
      - default
      - monitoring-network
    restart: unless-stopped

  # Alertmanager - Gerencia alertas
  alertmanager:
    image: prom/alertmanager:latest
    container_name: labend-alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./docker/configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  alertmanager_data:

networks:
  monitoring-network:
    external: true 