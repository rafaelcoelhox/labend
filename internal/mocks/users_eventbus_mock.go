// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rafaelcoelhox/labbend/internal/users (interfaces: EventBus)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	eventbus "github.com/rafaelcoelhox/labbend/internal/core/eventbus"
)

// MockUsersEventBus is a mock of EventBus interface.
type MockUsersEventBus struct {
	ctrl     *gomock.Controller
	recorder *MockUsersEventBusMockRecorder
}

// MockUsersEventBusMockRecorder is the mock recorder for MockUsersEventBus.
type MockUsersEventBusMockRecorder struct {
	mock *MockUsersEventBus
}

// NewMockUsersEventBus creates a new mock instance.
func NewMockUsersEventBus(ctrl *gomock.Controller) *MockUsersEventBus {
	mock := &MockUsersEventBus{ctrl: ctrl}
	mock.recorder = &MockUsersEventBusMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersEventBus) EXPECT() *MockUsersEventBusMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockUsersEventBus) Publish(arg0 eventbus.Event) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Publish", arg0)
}

// Publish indicates an expected call of Publish.
func (mr *MockUsersEventBusMockRecorder) Publish(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockUsersEventBus)(nil).Publish), arg0)
}
