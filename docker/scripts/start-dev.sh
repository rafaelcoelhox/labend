#!/bin/bash

# üöÄ Script para iniciar ambiente de desenvolvimento - LabEnd

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Iniciando Ambiente de Desenvolvimento - LabEnd${NC}"

# Verificar se Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker n√£o est√° rodando. Inicie o Docker primeiro.${NC}"
    exit 1
fi

# Verificar se estamos no diret√≥rio correto
if [ ! -f "../docker-compose.yml" ]; then
    echo -e "${RED}‚ùå Execute este script no diret√≥rio docker/${NC}"
    exit 1
fi

# Parar containers existentes
echo -e "${YELLOW}üõë Parando containers existentes...${NC}"
cd .. && docker-compose down 2>/dev/null || true

# Construir e iniciar containers
echo -e "${YELLOW}üîÑ Construindo e iniciando containers...${NC}"
docker-compose up --build -d

# Aguardar servi√ßos iniciarem
echo -e "${BLUE}‚è≥ Aguardando servi√ßos iniciarem...${NC}"
sleep 5

# Verificar se os servi√ßos est√£o rodando
if docker-compose ps | grep -q "Up"; then
    echo -e "${GREEN}‚úÖ Ambiente de desenvolvimento iniciado com sucesso!${NC}"
    echo ""
    echo -e "${GREEN}üåê Servi√ßos dispon√≠veis:${NC}"
    echo -e "   ${BLUE}API:${NC}          http://localhost:8080"
    echo -e "   ${BLUE}GraphQL:${NC}      http://localhost:8080/graphql"
    echo -e "   ${BLUE}Health:${NC}       http://localhost:8080/health"
    echo -e "   ${BLUE}PostgreSQL:${NC}   localhost:5432"
    echo ""
    echo -e "${YELLOW}üìã Comandos √∫teis:${NC}"
    echo -e "   ${BLUE}Ver logs:${NC}     docker-compose logs -f"
    echo -e "   ${BLUE}Parar:${NC}        docker-compose down"
    echo -e "   ${BLUE}Rebuild:${NC}      docker-compose up --build -d"
else
    echo -e "${RED}‚ùå Falha ao iniciar ambiente de desenvolvimento${NC}"
    echo -e "${YELLOW}üîç Verifique os logs:${NC}"
    echo -e "   docker-compose logs"
    exit 1
fi 